version: 2
jobs:
  validate-branch-name:
    resource_class: small
    docker:
      - image: circleci/elixir:1.8
    steps:
      - run:
          name: Validate feature environment naming convention
          command: |
            if [[ $CIRCLE_BRANCH =~ ^feature/ ]]; then
              export FEATURE_NAME=$( echo ${CIRCLE_BRANCH} | sed -e 's/.*\///g' )
              [[ $FEATURE_NAME =~ ^[a-zA-Z0-9-]+$ ]] || (echo "feature names may only contain alphnumeric characters and dashes, yours is '${FEATURE_NAME}'" && exit 1)
            fi


  build-and-publish:
    resource_class: small
    docker:
      - image: blinker/gearbox:latest
        auth:
          username: blinker
          password: $DOCKERHUB_PASSWORD
    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:16:3b:78:68:22:1b:4f:d9:59:08:84:33:34:b6:44"
      - checkout
      - setup_remote_docker
      - run:
          name: Set Gearbox environment variables
          command: |
            gearbox cicd circle_ci_setup
      - run:
          name: Build Docker image
          command: |
            gearbox cicd docker_build_image
      - run:
          name: Push Docker image
          command: |
            gearbox cicd docker_push_image

  set-catalog:
    resource_class: small
    docker:
      - image: blinker/gearbox:latest
        auth:
          username: blinker
          password: $DOCKERHUB_PASSWORD
    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:16:3b:78:68:22:1b:4f:d9:59:08:84:33:34:b6:44"
      - run:
          name: Set Gearbox environment variables
          command: |
            gearbox cicd circle_ci_setup
      - run:
          name: Set Docker image tag in catalog
          command: |
            gearbox cicd consul_set_catalog_image_tag

  deploy-feature:
    resource_class: small
    docker:
      - image: blinker/gearbox:latest
        auth:
          username: blinker
          password: $DOCKERHUB_PASSWORD
    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:16:3b:78:68:22:1b:4f:d9:59:08:84:33:34:b6:44"
      - run:
          name: Set Gearbox environment variables
          command: |
            gearbox cicd circle_ci_setup
      - run:
          name: Configure authentication for Docker Hub
          command: |
            gearbox cicd consul_kv_get key=code.blinker.com/docker/dockercfg > ~/.dockercfg
      - run:
          name: Generate docker-compose.yml
          command: |
            gearbox cicd docker_generate_compose
      - run:
          name: Deploy feature environment
          command: |
            docker stack deploy --compose-file docker-compose.yml --with-registry-auth ${GEARBOX_CICD_BRANCH_NAME}

  deploy-integration:
    resource_class: small
    docker:
      - image: blinker/gearbox:latest
        auth:
          username: blinker
          password: $DOCKERHUB_PASSWORD
    environment:
      GEARBOX_ENVIRONMENT: integration
    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:16:3b:78:68:22:1b:4f:d9:59:08:84:33:34:b6:44"
      - run:
          name: Set Gearbox environment variables
          command: |
            gearbox cicd circle_ci_setup
      - run:
          name: Deploy to integration
          command: |
            gearbox cicd nomad_deploy_service

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - validate-branch-name:
          filters:
            tags:
              only:
                - /^v.*/
      - build-and-publish:
          filters:
            tags:
              only:
                - /^v.*/
      - set-catalog:
          requires:
            - build-and-publish
          filters:
            tags:
              only:
                - /^v.*/
      - deploy-feature:
          requires:
            - set-catalog
          filters:
            branches:
              only:
                - /^feature\/.*/
      - deploy-integration:
          requires:
            - set-catalog
          filters:
            branches:
              only:
                - integration
            tags:
              only:
                - /^v.*/
